@page "/selection"
@using Comm2TenderBlazor.Models.Dto

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<h1>Выбор контрагента</h1>

@if (tenders == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>СОМ номер</th>
                <th>Описание</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tender in tenders)
            {

	            <tr>
		            <td>@tender.Number</td>
		            <td>@tender.Discription</td>
		            <td>
			            <button class="btn btn-secondary" @onclick="() => OpenCalculationPage(tender)">
				            <span class="btn btn-secondary">Открыть окно выбора</span>
			            </button>
		            </td>
	            </tr>

            }
        </tbody>
    </table>
}

@code {

    private List<Tender> tenders;

    protected override async Task OnInitializedAsync()
    {
	    var token = await LocalStorage.GetItemAsync<string>("AccessToken");

	    if (string.IsNullOrEmpty(token))
	    {
		    NavigationManager.NavigateTo("/login");
		    return;
	    }

        try
        {
            tenders = await ApiRequests.PostAllListAsync<Tender>("api/tender/Search", HttpClient, token);

            foreach (var tender in tenders)
            {
	            tender.Number = EncodingHelper.ConvertAsciiToUtf8(tender.Number);
	            tender.Discription = EncodingHelper.ConvertAsciiToUtf8(tender.Discription);
            }
        }
        catch (Exception ex)
        {
            NavigationManager.NavigateTo("/error");
        }
    }

    private void OpenCalculationPage(Tender tender)
    {
        NavigationManager.NavigateTo($"/calculations/{tender.TenderId}");
    }
}
