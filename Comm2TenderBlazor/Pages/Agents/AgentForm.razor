@page "/agent/{id:int}"
@using Comm2TenderBlazor.Models.Dto

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h1>@title</h1>

@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else
{
      <div class="row">
        <div class="col">
            <EditForm Model="@agent" OnValidSubmit="() => HandleSubmit(agent)">
                <DataAnnotationsValidator />
                <ValidationSummary />
                 <div >
                    <label class="form-label">Название:</label>
                    <InputText @bind-Value="agent.Name" class="form-control"></InputText> @* Коментарий *@
                </div>
                  <div>
                    <label class="form-label">ИНН:</label>
                     <InputNumber @bind-Value="agent.INN" class="form-control"></InputNumber>
                </div>
                <div>
                    <label class="form-label">КПП:</label>
                     <InputNumber @bind-Value="agent.KPP" class="form-control"></InputNumber> 
                </div>
                <div>
                    <label class="form-label">ОГРН:</label>
                    <InputNumber @bind-Value="agent.OGRN" class="form-control"></InputNumber>
                    
                </div>
                <div>
                    <label class="form-label">Дата регистрации:</label>
                    <InputDate @bind-Value="agent.AgentRegistrationDate" class="form-control "></InputDate>

                </div>
                
                @if (Id == 0)
                {
                    <button class="btn-info" type="submit">Добавить</button>
                }
                else
                {
                    <button class="btn-info" type="submit">Обновить</button>
                }
                
                <button class="btn-warning" @onclick="Back">Отмена</button>
            </EditForm>
        </div>
    </div>   
}


@code {

    [Parameter]
    public int? Id { get; set; }

    private string title = "";

    private Agent? agent;

    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (Id != 0)
            {
                agent = await HttpClient.GetFromJsonAsync<Agent>($"api/agent/get_agent/{Id}");

                title = agent.Name;
            }
            else
            {
                title = "Новый контрагент";

                agent = new Agent();
                agent.Name = string.Empty;
                agent.AgentRegistrationDate = new DateTime(2000,1,1);
            }

            isLoading = false;
        }
        catch (Exception ex)
        {
            NavigationManager.NavigateTo("/error");
        }
    }

    private async Task HandleSubmit(Agent agent)
    {
        if (agent.AgentId == 0)
        {
            await HttpClient.PostAsJsonAsync("api/agent", agent);
            Back();
        }
        else
        {
            await HttpClient.PutAsJsonAsync("api/agent", agent);
            Back();
        }
    }

    private void Back()
    {
        NavigationManager.NavigateTo("/agents");
    }

}