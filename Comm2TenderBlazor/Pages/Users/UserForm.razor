@page "/user/{id:int}"
@using Comm2TenderBlazor.Models.Dto

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else if (user != null && roles != null)
{
     <div class="row">
        <div class="col">
            <EditForm Model="@user" OnValidSubmit="() => HandleSubmit(user)">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div >
                    <label class="form-label">ФИО:</label>
                    <InputText @bind-Value="user.Name" class="form-control"></InputText>
                </div>
                <div>
                    <label class="form-label">Email:</label>
                    <InputText @bind-Value="user.Email" class="form-control" placeholder="Enter email" type="email"></InputText>
                </div>
                <div>
                    <label class="form-label">Пароль:</label>
                    <InputText @bind-Value="user.Password" class="form-control"></InputText>
                </div>
                <div>
                    <label class="form-label">Роль:</label>
                    <select class="form-select" @bind="@user.Role.RoleId">
                        @if (roles != null)
                        {
                            @foreach (var role in roles)
                            {
                                <option value="@role.RoleId">@role.Name</option>
                            }
                        }
                    </select>
                </div>
                <div>
                    <label class="form-label">Активация учетной записи</label>
                    <input type="checkbox" id="roleUser" @bind="user.IsActive" class="form-check-input">
                </div>
                
                @if (Id == 0)
                {
                    <button class="btn-info" type="submit">Добавить</button>
                }
                else
                {
                    <button class="btn-info" type="submit">Обновить</button>
                }
                
                <button class="btn-warning" @onclick="Back">Отмена</button>
            </EditForm>
        </div>
    </div>  
}


@code {

    [Parameter]
    public int? Id { get; set; }

    private string title = "";

    private User? user;
    private List<Role>? roles;

    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (Id != 0)
            {

                user = await HttpClient.GetFromJsonAsync<User>($"api/user/get_user/{Id}");

                title = user.Name;
            }
            else
            {
                title = "Новый пользователь";

                user = new User();
                user.Name = string.Empty;
                user.Email = string.Empty;
                user.Password = string.Empty;
                user.Role = new Role();
                user.Role.Name = string.Empty;
            }

            roles = await PagesHelper.GetAllListAsync<Role>("api/role/search", HttpClient);

            isLoading = false;
        }
        catch (Exception ex)
        {
            NavigationManager.NavigateTo("/error");
        }
    }

    private async Task HandleSubmit(User user)
    {
        if (user.UserId == 0)
        {
            await HttpClient.PostAsJsonAsync("api/user", user);
            Back();
        }
        else
        {
            await HttpClient.PutAsJsonAsync("api/user", user);
            Back();
        }
    }

    private void Back()
    {
        NavigationManager.NavigateTo("/users");
    }

}