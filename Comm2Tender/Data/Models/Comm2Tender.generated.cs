//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace Comm2Tender.Data
{
	/// <summary>
	/// Database       : Comm2Tender
	/// Data Source    : tcp://173.12.10.63:5432
	/// Server Version : 15.8 (Debian 15.8-0+deb12u1)
	/// </summary>
	public partial class Comm2TenderDB : LinqToDB.Data.DataConnection
	{
		public ITable<Agent>               Agent               { get { return this.GetTable<Agent>(); } }
		public ITable<CustomFeeDictionary> CustomFeeDictionary { get { return this.GetTable<CustomFeeDictionary>(); } }
		public ITable<PercentsDictionary>  PercentsDictionary  { get { return this.GetTable<PercentsDictionary>(); } }
		public ITable<Proposal>            Proposal            { get { return this.GetTable<Proposal>(); } }
		public ITable<Role>                Role                { get { return this.GetTable<Role>(); } }
		public ITable<Tender>              Tender              { get { return this.GetTable<Tender>(); } }
		public ITable<User>                User                { get { return this.GetTable<User>(); } }
		public ITable<UserToken>           UserToken           { get { return this.GetTable<UserToken>(); } }

		partial void InitMappingSchema()
		{
		}

		public Comm2TenderDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public Comm2TenderDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public Comm2TenderDB(DataOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public Comm2TenderDB(DataOptions<Comm2TenderDB> options)
			: base(options.Options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="Agent")]
	public partial class Agent
	{
		[PrimaryKey, Identity   ] public int      AgentId                     { get; set; } // integer
		[Column,     NotNull    ] public string   Name                        { get; set; } // text
		[Column,     NotNull    ] public DateTime AgentRegistrationDate       { get; set; } // date
		[Column,     NotNull    ] public DateTime AgentSystemRegistrationDate { get; set; } // date
		[Column,     NotNull    ] public decimal  OGRN                        { get; set; } // numeric
		[Column,     NotNull    ] public decimal  INN                         { get; set; } // numeric
		[Column,     NotNull    ] public decimal  KPP                         { get; set; } // numeric
		[Column,        Nullable] public string   Description                 { get; set; } // text

		#region Associations

		/// <summary>
		/// FK_ProposalAgent_BackReference (dbo.Proposal)
		/// </summary>
		[Association(ThisKey="AgentId", OtherKey="AgentId", CanBeNull=true)]
		public IEnumerable<Proposal> ProposalAgents { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="CustomFeeDictionary")]
	public partial class CustomFeeDictionary
	{
		[PrimaryKey, Identity] public int     CustomFeeDictionaryId { get; set; } // integer
		[Column,     NotNull ] public decimal MinAmount             { get; set; } // numeric
		[Column,     NotNull ] public decimal SummaryCustomFee      { get; set; } // numeric
	}

	[Table(Schema="dbo", Name="PercentsDictionary")]
	public partial class PercentsDictionary
	{
		[PrimaryKey, Identity] public int      PercentsDictionaryId { get; set; } // integer
		[Column,     NotNull ] public DateTime DateEnter            { get; set; } // date
		[Column,     NotNull ] public decimal  RefinancingRate      { get; set; } // numeric
		[Column,     NotNull ] public decimal  Tmk                  { get; set; } // numeric
		[Column,     NotNull ] public decimal  BankGuarantee        { get; set; } // numeric
		[Column,     NotNull ] public decimal  Credit               { get; set; } // numeric
		[Column,     NotNull ] public decimal  CustomDuty           { get; set; } // numeric
		[Column,     NotNull ] public decimal  Discount             { get; set; } // numeric

		#region Associations

		/// <summary>
		/// FK_PercentsDictionaryProposal_BackReference (dbo.Tender)
		/// </summary>
		[Association(ThisKey="PercentsDictionaryId", OtherKey="PercentsDictionaryId", CanBeNull=true)]
		public IEnumerable<Tender> PercentsDictionaryProposals { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Proposal")]
	public partial class Proposal
	{
		[PrimaryKey, Identity] public int     ProposalId             { get; set; } // integer
		[Column,     NotNull ] public int     AgentId                { get; set; } // integer
		[Column,     NotNull ] public int     UserId                 { get; set; } // integer
		[Column,     NotNull ] public int     TenderId               { get; set; } // integer
		[Column,     NotNull ] public int     CountPos               { get; set; } // integer
		[Column,     NotNull ] public decimal PositionPrice          { get; set; } // numeric
		[Column,     NotNull ] public decimal DeliveryCost           { get; set; } // numeric
		[Column,     NotNull ] public int     DeliveryTime           { get; set; } // integer
		[Column,     NotNull ] public decimal PrepaidExpense1        { get; set; } // numeric
		[Column,     NotNull ] public decimal PrepaidExpense2        { get; set; } // numeric
		[Column,     NotNull ] public decimal PrepaidExpense3        { get; set; } // numeric
		[Column,     NotNull ] public int     PeriodOfExecution1     { get; set; } // integer
		[Column,     NotNull ] public int     PeriodOfExecution2     { get; set; } // integer
		[Column,     NotNull ] public int     PeriodOfExecution3     { get; set; } // integer
		[Column,     NotNull ] public decimal PostPaymant1           { get; set; } // numeric
		[Column,     NotNull ] public decimal PostPaymant2           { get; set; } // numeric
		[Column,     NotNull ] public decimal PostPaymant3           { get; set; } // numeric
		[Column,     NotNull ] public int     PostPaymantPeriod1     { get; set; } // integer
		[Column,     NotNull ] public int     PostPaymantPeriod2     { get; set; } // integer
		[Column,     NotNull ] public int     PostPaymantPeriod3     { get; set; } // integer
		[Column,     NotNull ] public bool    Accreditive            { get; set; } // boolean
		[Column,     NotNull ] public bool    BankGuarantee          { get; set; } // boolean
		[Column,     NotNull ] public bool    CustomDuty             { get; set; } // boolean
		[Column,     NotNull ] public bool    CustomFee              { get; set; } // boolean
		[Column,     NotNull ] public bool    MissingDeadlines       { get; set; } // boolean
		[Column,     NotNull ] public bool    PoorQuality            { get; set; } // boolean
		[Column,     NotNull ] public bool    NormsViolated          { get; set; } // boolean
		[Column,     NotNull ] public bool    ExperienceCooperation  { get; set; } // boolean
		[Column,     NotNull ] public bool    ExperienceMarket       { get; set; } // boolean
		[Column,     NotNull ] public bool    Fines                  { get; set; } // boolean
		[Column,     NotNull ] public bool    Intermediary           { get; set; } // boolean
		[Column,     NotNull ] public bool    ProductionAndInventory { get; set; } // boolean
		[Column,     NotNull ] public bool    ModernEquipment        { get; set; } // boolean
		[Column,     NotNull ] public bool    Georgraphy             { get; set; } // boolean
		[Column,     NotNull ] public bool    Concessions            { get; set; } // boolean
		[Column,     NotNull ] public bool    Complaints             { get; set; } // boolean

		#region Associations

		/// <summary>
		/// FK_ProposalAgent (dbo.Agent)
		/// </summary>
		[Association(ThisKey="AgentId", OtherKey="AgentId", CanBeNull=false)]
		public Agent Agent { get; set; }

		/// <summary>
		/// FK_ProposalTender (dbo.Tender)
		/// </summary>
		[Association(ThisKey="TenderId", OtherKey="TenderId", CanBeNull=false)]
		public Tender Tender { get; set; }

		/// <summary>
		/// FK_TenderProposal_BackReference (dbo.Tender)
		/// </summary>
		[Association(ThisKey="ProposalId", OtherKey="WinnerProposalId", CanBeNull=true)]
		public IEnumerable<Tender> TenderProposals { get; set; }

		/// <summary>
		/// FK_ProposalUser (dbo.User)
		/// </summary>
		[Association(ThisKey="UserId", OtherKey="UserId", CanBeNull=false)]
		public User User { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Role")]
	public partial class Role
	{
		[PrimaryKey, Identity] public int    RoleId { get; set; } // integer
		[Column,     NotNull ] public string Name   { get; set; } // text

		#region Associations

		/// <summary>
		/// FK_UserRole_BackReference (dbo.User)
		/// </summary>
		[Association(ThisKey="RoleId", OtherKey="RoleId", CanBeNull=true)]
		public IEnumerable<User> UserRoles { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Tender")]
	public partial class Tender
	{
		[PrimaryKey, Identity   ] public int    TenderId             { get; set; } // integer
		[Column,     NotNull    ] public string Number               { get; set; } // text
		[Column,     NotNull    ] public string Discription          { get; set; } // text
		[Column,     NotNull    ] public int    PercentsDictionaryId { get; set; } // integer
		[Column,        Nullable] public int?   WinnerProposalId     { get; set; } // integer
		[Column,        Nullable] public string DiscriptionFeedback  { get; set; } // text
		[Column,        Nullable] public int?   Score                { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_PercentsDictionaryProposal (dbo.PercentsDictionary)
		/// </summary>
		[Association(ThisKey="PercentsDictionaryId", OtherKey="PercentsDictionaryId", CanBeNull=false)]
		public PercentsDictionary PercentsDictionary { get; set; }

		/// <summary>
		/// FK_ProposalTender_BackReference (dbo.Proposal)
		/// </summary>
		[Association(ThisKey="TenderId", OtherKey="TenderId", CanBeNull=true)]
		public IEnumerable<Proposal> ProposalTenders { get; set; }

		/// <summary>
		/// FK_TenderProposal (dbo.Proposal)
		/// </summary>
		[Association(ThisKey="WinnerProposalId", OtherKey="ProposalId", CanBeNull=true)]
		public Proposal WinnerProposal { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="User")]
	public partial class User
	{
		[PrimaryKey, Identity] public int    UserId   { get; set; } // integer
		[Column,     NotNull ] public int    RoleId   { get; set; } // integer
		[Column,     NotNull ] public string Name     { get; set; } // text
		[Column,     NotNull ] public string Email    { get; set; } // text
		[Column,     NotNull ] public string Password { get; set; } // text
		[Column,     NotNull ] public bool   IsActive { get; set; } // boolean

		#region Associations

		/// <summary>
		/// FK_ProposalUser_BackReference (dbo.Proposal)
		/// </summary>
		[Association(ThisKey="UserId", OtherKey="UserId", CanBeNull=true)]
		public IEnumerable<Proposal> ProposalUsers { get; set; }

		/// <summary>
		/// FK_UserRole (dbo.Role)
		/// </summary>
		[Association(ThisKey="RoleId", OtherKey="RoleId", CanBeNull=false)]
		public Role Role { get; set; }

		/// <summary>
		/// FK_UserTokenUser_BackReference (dbo.UserToken)
		/// </summary>
		[Association(ThisKey="UserId", OtherKey="UserId", CanBeNull=true)]
		public IEnumerable<UserToken> UserTokenUsers { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="UserToken")]
	public partial class UserToken
	{
		[PrimaryKey, Identity] public int      UserTokenId            { get; set; } // integer
		[Column,     NotNull ] public int      UserId                 { get; set; } // integer
		[Column,     NotNull ] public DateTime DateTime               { get; set; } // date
		[Column,     NotNull ] public string   Data                   { get; set; } // text
		[Column,     NotNull ] public DateTime ExpiresAccessDateTime  { get; set; } // date
		[Column,     NotNull ] public DateTime ExpiresRefreshDateTime { get; set; } // date

		#region Associations

		/// <summary>
		/// FK_UserTokenUser (dbo.User)
		/// </summary>
		[Association(ThisKey="UserId", OtherKey="UserId", CanBeNull=false)]
		public User User { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Agent Find(this ITable<Agent> table, int AgentId)
		{
			return table.FirstOrDefault(t =>
				t.AgentId == AgentId);
		}

		public static CustomFeeDictionary Find(this ITable<CustomFeeDictionary> table, int CustomFeeDictionaryId)
		{
			return table.FirstOrDefault(t =>
				t.CustomFeeDictionaryId == CustomFeeDictionaryId);
		}

		public static PercentsDictionary Find(this ITable<PercentsDictionary> table, int PercentsDictionaryId)
		{
			return table.FirstOrDefault(t =>
				t.PercentsDictionaryId == PercentsDictionaryId);
		}

		public static Proposal Find(this ITable<Proposal> table, int ProposalId)
		{
			return table.FirstOrDefault(t =>
				t.ProposalId == ProposalId);
		}

		public static Role Find(this ITable<Role> table, int RoleId)
		{
			return table.FirstOrDefault(t =>
				t.RoleId == RoleId);
		}

		public static Tender Find(this ITable<Tender> table, int TenderId)
		{
			return table.FirstOrDefault(t =>
				t.TenderId == TenderId);
		}

		public static User Find(this ITable<User> table, int UserId)
		{
			return table.FirstOrDefault(t =>
				t.UserId == UserId);
		}

		public static UserToken Find(this ITable<UserToken> table, int UserTokenId)
		{
			return table.FirstOrDefault(t =>
				t.UserTokenId == UserTokenId);
		}
	}
}
